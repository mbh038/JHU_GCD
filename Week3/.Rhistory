datedownloaded<-date()
datedownloaded
}
# load files into R
gdp.df<-read.csv("./data/GDP.csv")
edu.df<-read.csv("./data/EDU.csv")
str(gdp.df)
str(edu.df)
head(gdp)
head(gdp.df)
names(gdp.df)
head(gdp$X)
head(gdp.df$X)
str(gdp.df)
?count
str(edu.df)
count(gdp.df$X==edu$CountryCode)
count(gdp.df$X==edu.df$CountryCode)
mm<-unique(gdp.df$x %in% edu.df$CountryCode)
mm
mm<-sum(unique(gdp.df$x) %in% unique(edu.df$CountryCode)))
mm<-sum(unique(gdp.df$x) %in% unique(edu.df$CountryCode))
mm
mm<-sum(unique(gdp.df$X) %in% unique(edu.df$CountryCode))
mm
mm<-sum(gdp.df$X %in% edu.df$CountryCode)
mm
str(gdp.df)
head(gdp.df$X,20)
length(gdp.df$X)
length(unique(gdp$X))
length(unique(gdp.df$X))
head(gdp.df$X,100)
tail(gdp.df$X,100)
unique(gdp.df$X[1:229])
unique(edu.df$X[1:229])
unique(edu.df$CountryCode[1:229])
length(which(gdp.df$X==edu.df$CountryCode)
)
length(which(gdp.df$X==edu.df$CountryCode))
?read.csv
str(gdp.df)
gdp.df<-read.csv("./data/GDP.csv",stringsAsFactors=FALSE)
edu.df<-read.csv("./data/EDU.csv",stringsAsFactors=FALSE)
str(gdp.df)
str(edu.df)
str(gdp.df)
head(gdp.df)
gdp.df$X[1:10]
gdp<-read.csv("./data/GDP.csv",stringsAsFactors=FALSE,blank.lines.skip=TRUE)
edu<-read.csv("./data/EDU.csv",stringsAsFactors=FALSE,blank.lines.skip=TRUE)
str(gdp)
str(edu)
mm<-sum(gdp.df$X %in% edu.df$CountryCode)
mm
mm<-sum(gdp$X %in% edu$CountryCode)
mm
gdp.df$X[1:10]
gdp$X[1:10]
gdp<-read.csv("./data/GDP.csv",stringsAsFactors=FALSE,blank.lines.skip=TRUE)
edu<-read.csv("./data/EDU.csv",stringsAsFactors=FALSE,blank.lines.skip=TRUE)
str(gdp)
str(edu)
mm<-sum(gdp.$X %in% edu.$CountryCode)
mm
# load files into R
gdp<-read.csv("./data/GDP.csv",stringsAsFactors=FALSE,blank.lines.skip=TRUE)
edu<-read.csv("./data/EDU.csv",stringsAsFactors=FALSE,blank.lines.skip=TRUE)
str(gdp)
str(edu)
mm<-sum(gdp$X %in% edu$CountryCode)
mm
cc<-select(gdp,X)
str(cc)
dd<-select(edu.CountryCode)
dd<-select(edu,CountryCode)
str(dd)
?write.csv
write.csv(gdp,file="./data/gdpcc.csv")
write.csv(dd,file="./data/educc.csv")
write.csv(cc,file="./data/gdpcc.csv")
names(gdp)
names(edu)
mergedData = merge(gdp,edu,by.x="X",by.y="CountryCode",all=TRUE)
str(mergedData)
summary(mergedData$X)
head(mergedData$X)
tail(mergedData$X)
mergedData$X[13]
names(mergedData)
arrange(mergedData,Gross.domestic.product.2012)
head(mergedData,20)
arrange(mergedData,Gross.domestic.product.2012,na.last=TRUE)
order(mergedData,Gross.domestic.product.2012,na.last=TRUE)
order(mergedData,"Gross.domestic.product.2012",na.last=TRUE)
head(mergedData,20)
ls
ls()
hm<-which(gdp$X %in% edu$CountryClass)
hm
str(hr)
str(hm)
gdp$X[%in% edu$CountryClass]
gdp$X[gdp$X %in% edu$CountryClass]
str(gdp$X)
str(edu$CountryClass)
str(edu)
gdp$X[gdp$X %in% edu$CountryCode]
unique(gdp$X[gdp$X %in% edu$CountryCode])
names(gdp)
?rename
iris
gdp<-rename(gdp,gdp2012=Gross.Domestic.Product.2012)
names(gdp)
gdp<-rename(gdp,gdp2012=Gross.domestic.product.2012)
names(gdp)
names(edu)
?read.csv
## Question Three
# load the GDP file
# download GDP data if not yet already done so
if(!file.exists("./data/GDP.csv")){
#download a data file as csv into the "data" dir
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileURL,destfile="./data/GDP.csv")
#include date of download
datedownloaded<-date()
datedownloaded
}
# download EDU data if not yet already done so
if(!file.exists("./data/EDU.csv")){
#download a data file as csv into the "data" dir
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileURL,destfile="./data/EDU.csv")
#include date of download
datedownloaded<-date()
datedownloaded
}
# load files into R
gdp<-read.csv("./data/GDP.csv",stringsAsFactors=FALSE,blank.lines.skip=TRUE)
edu<-read.csv("./data/EDU.csv",stringsAsFactors=FALSE,blank.lines.skip=TRUE)
str(gdp)
str(edu)
gdp<-rename(gdp,gdp2012=Gross.domestic.product.2012)
heAd(gdp)
head(gdp)
tail(gdp)
max(gdp$X)
str(gdp)
# download EDU data if not yet already done so
if(!file.exists("./data/EDU.csv")){
#download a data file as csv into the "data" dir
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileURL,destfile="./data/EDU.csv")
#include date of download
datedownloaded<-date()
datedownloaded
}
# load files into R
gdp<-read.csv("./data/GDP.csv",stringsAsFactors=FALSE)
edu<-read.csv("./data/EDU.csv",stringsAsFactors=FALSE)
str(gdp)
str(edu)
## Question Three
# load the GDP file
# download GDP data if not yet already done so
if(!file.exists("./data/GDP.csv")){
#download a data file as csv into the "data" dir
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileURL,destfile="./data/GDP.csv")
#include date of download
datedownloaded<-date()
datedownloaded
}
# download EDU data if not yet already done so
if(!file.exists("./data/EDU.csv")){
#download a data file as csv into the "data" dir
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileURL,destfile="./data/EDU.csv")
#include date of download
datedownloaded<-date()
datedownloaded
}
# load files into R
gdp<-read.csv("./data/GDP.csv",stringsAsFactors=FALSE)
edu<-read.csv("./data/EDU.csv",stringsAsFactors=FALSE)
str(gdp)
str(edu)
str(gdp)
head(gdp,20)
# load files into R
gdp<-read.csv("./data/GDP.csv",stringsAsFactors=FALSE,skip=4)
edu<-read.csv("./data/EDU.csv",stringsAsFactors=FALSE)
str(gdp)
str(edu)
head(gdp)
tail(gdp)
gdp<-read.csv("./data/GDP.csv",stringsAsFactors=FALSE,skip=4,skipNul=TRUE)
edu<-read.csv("./data/EDU.csv",stringsAsFactors=FALSE)
str(gdp)
head(gdp,20)
tail(gdp,20)
gdp<-read.csv("./data/GDP.csv",stringsAsFactors=FALSE,skip=4,blank.lines.skip=TRUE)
edu<-read.csv("./data/EDU.csv",stringsAsFactors=FALSE)
str(gdp)
# str(edu)
tail(gdp,20)
head(gdp,10)
head(edu)
tail(edu)
gdp<-rename(gdp,rank=X.1,gdp=X.4)
mm<-sum(gdp$X %in% edu$CountryCode)
mm
max(gdp,gdp)
head(gdp)
str(gdp)
gdp$rank<-as.numeric(gdp$rank)
max(gdp$rank)
head(gdp)
max(gdp$rank,na.rm=TRUE)
gdp<-rename(gdp,rank=X.1,gdp=X.4)
gdp<-filter(gdp,rank!="NA")
gdp$rank<-as.numeric(gdp$rank)
gdp$gdp<-as.numeric(gdp$gdp)
gdp<-read.csv("./data/GDP.csv",stringsAsFactors=FALSE,skip=4)
edu<-read.csv("./data/EDU.csv",stringsAsFactors=FALSE)
# str(gdp)
# str(edu)
# rename a few columns
gdp<-rename(gdp,rank=X.1,gdp=X.4)
gdp<-filter(gdp,rank!="NA")
gdp$rank<-as.numeric(gdp$rank)
gdp$gdp<-as.numeric(gdp$gdp)
str(gdp)
tail(gdp)
gdp<-read.csv("./data/GDP.csv",stringsAsFactors=FALSE,skip=4)
edu<-read.csv("./data/EDU.csv",stringsAsFactors=FALSE)
# str(gdp)
# str(edu)
# rename a few columns
gdp<-rename(gdp,rank=X.1,gdp=X.4)
gdp<-gdp[!(is.na(gdp$rank)),]
tail(gdp)
?is.blank
gdp<-read.csv("./data/GDP.csv",stringsAsFactors=FALSE,skip=4)
edu<-read.csv("./data/EDU.csv",stringsAsFactors=FALSE)
# str(gdp)
# str(edu)
# rename a few columns
gdp<-rename(gdp,rank=X.1,gdp=X.4)
#gdp<-gdp[!(is.na(gdp$rank)),]
gdp$rank<-as.numeric(gdp$rank)
tail(gdp)
gdp<-gdp[!(is.na(gdp$rank)),]
tail(gdp)
str(gdp)
sort(gdp,gdp$gdp)
arrange(gdp,gdp)
?arrange
head(gdp)
arrange(gdp,desc(gdp))
gdp$gdp<-as.numeric(gdp$gdp)
sumary(gdp)
summary(gdp)
head(gdp)
gdp<-read.csv("./data/GDP.csv",stringsAsFactors=FALSE,skip=4)
gdp<-rename(gdp,rank=X.1,gdp=X.4)
gdp$rank<-as.numeric(gdp$rank)
gdp<-gdp[!(is.na(gdp$rank)),]
gdp<-filter(gdp,X,rank,gdp)
# rename a few columns
gdp<-read.csv("./data/GDP.csv",stringsAsFactors=FALSE,skip=4)
gdp<-rename(gdp,rank=X.1,gdp=X.4)
gdp$rank<-as.numeric(gdp$rank)
gdp<-gdp[!(is.na(gdp$rank)),]
gdp<-select(gdp,X,rank,gdp)
head(gdp)
# read in gdp file to df gdp
gdp<-read.csv("./data/GDP.csv",stringsAsFactors=FALSE,skip=4)
#rename the rank and gdp columns
gdp<-rename(gdp,rank=X.1,gdp=X.4)
gdp$rank<-as.numeric(gdp$rank)
gdp<-gdp[!(is.na(gdp$rank)),]
gdp$gdp<-as.numeric(gsub(",","",gdp$gdp))
#keep only the columns we need
gdp<-select(gdp,X,rank,gdp)
str(gdp)
head(gdp)
summary(gdp)
gdp<-read.csv("./data/GDP.csv",stringsAsFactors=FALSE,skip=4)
edu<-read.csv("./data/EDU.csv",stringsAsFactors=FALSE)
# inspect dfs with head, tail, str, summary
# on that basis....
# get df gdp into shape:
# rename the rank and gdp columns
gdp<-rename(gdp,rank=X.1,gdp=X.4)
# make them both numeric - watch the commas in the gdp column!
gdp$rank<-as.numeric(gdp$rank)
gdp$gdp<-as.numeric(gsub(",","",gdp$gdp))
# filter out rows with no rank
gdp<-gdp[!(is.na(gdp$rank)),]
# keep only the columns we need
gdp<-select(gdp,X,rank,gdp)
summary(gdp)
mm<-sum(gdp$X %in% edu$CountryCode)
mm
#How many ranked countries in gdp are in the edu file?
in.both<-sum(gdp$X %in% edu$CountryCode)
in.both
# sort gdp in descending order of gdp
gdp_desc<-arrange(gdp,desc(gdp))
gdp_desc
gdp_sorted<-arrange(gdp,gdp)
gdp_sorted[13]
gdp_sorted<-arrange(gdp,gdp)
gdp_sorted<-arrange(gdp,gdp)
gdp_sorted[13,]
gdp<-read.csv("./data/GDP.csv",stringsAsFactors=FALSE,skip=4)
str(gdp)
# load csv files into R
gdp<-read.csv("./data/GDP.csv",stringsAsFactors=FALSE,skip=4)
edu<-read.csv("./data/EDU.csv",stringsAsFactors=FALSE)
# inspect dfs with head, tail, str, summary
# on that basis....
# get df gdp into shape:
# rename the rank and gdp columns
gdp<-rename(gdp,rank=X.1,country=X.3,gdp=X.4)
# make them both numeric - watch the commas in the gdp column!
gdp$rank<-as.numeric(gdp$rank)
gdp$gdp<-as.numeric(gsub(",","",gdp$gdp))
# filter out rows with no rank
gdp<-gdp[!(is.na(gdp$rank)),]
# keep only the columns we need
gdp<-select(gdp,X,rank,country,gdp)
#How many ranked countries in gdp are in the edu file?
in.both<-sum(gdp$X %in% edu$CountryCode)
in.both
# sort gdp in descending order of gdp
gdp_sorted<-arrange(gdp,gdp)
gdp_sorted[13,]
tail(gdp)
tail(gdp_sorted)
gdp<-read.csv("./data/GDP.csv",stringsAsFactors=FALSE,skip=4)
str(gdp)
str(edu)
names(edu)
str(edu)
summary(edu$Income.Group)
edu$Income.Group[1:20]
?merge
edu<-select(edu,CountryCode,Income.Group)
head(edu)
gdp.edu<-merge(gdp,edu,by.x=X,by.y=CountryCode)
str(gdp)
gdp<-read.csv("./data/GDP.csv",stringsAsFactors=FALSE,skip=4)
edu<-read.csv("./data/EDU.csv",stringsAsFactors=FALSE)
# inspect dfs with head, tail, str, summary
# on that basis....
# get df gdp into shape:
# rename the rank and gdp columns
gdp<-rename(gdp,rank=X.1,country=X.3,gdp=X.4)
# make them both numeric - watch the commas in the gdp column!
gdp$rank<-as.numeric(gdp$rank)
gdp$gdp<-as.numeric(gsub(",","",gdp$gdp))
# filter out rows with no rank
gdp<-gdp[!(is.na(gdp$rank)),]
# keep only the columns we need
gdp<-select(gdp,X,rank,country,gdp)
#How many ranked countries in gdp are in the edu file?
in.both<-sum(gdp$X %in% edu$CountryCode)
in.both
# sort gdp in descending order of gdp
gdp_sorted<-arrange(gdp,gdp)
gdp_sorted[13,]
## Question Four
# uses same gdp and edu data frames as last question
# keep only the columns we need in edu
edu<-select(edu,CountryCode,Income.Group)
gdp.edu<-merge(gdp,edu,by.x=X,by.y=CountryCode)
gdp.edu<-merge(gdp,edu,by.x="X",by.y="CountryCode")
str(gdp.edu)
gdp.edu<-merge(gdp,edu,by.x="X",by.y="CountryCode")
aveincome<-group_by(gdp.edu,Income.Group) %>% mean()
gdp.edu %>% group_by(Income.Group) %>% summarise(avg=mean(gdp))
gdp.edu %>% group_by(Income.Group) %>% summarise(avg=mean(rank))
str(gdp.edu)
head(gdp.edu)
ungroup(gdp.edu)
head(gdp.edu)
sum(is.na(gdp.edu$Income.Group))
quantile(gdp.edu$Income.Group)
quantile(gdp.edu$rank)
gdp.edu$rankGroups = cut(gdp.edu$rank,breaks=quantile(gdp.edu$rank))
table(gdp.edu$rankGroups)
table(gdp.edu$rankGroups,Income.Group)
table(gdp.edu$rankGroups,gdp.edu$Income.Group)
table(gdp.edu$rankGroups,gdp.edu$Income.Group)
library(Hmisc)
gdp.edu$rankGroups = cut(gdp.edu$rank,breaks=quantile(gdp.edu$rank,probs=c(0,0.2,0.4,0.6,0.8,1.0)))
table(gdp.edu$rankGroups)
table(gdp.edu$rankGroups,gdp.edu$Income.Group)
gdp.edu$rankGroups = cut(gdp.edu$rank,breaks=quantile(gdp.edu$rank,
probs=c(0,0.2,0.4,0.6,0.8,1.0)),
include.lowest=TRUE)
table(gdp.edu$rankGroups)
table(gdp.edu$rankGroups,gdp.edu$Income.Group)
head(gdp.edu)
arrange(gdp.edu,rank)
gdp.edu$rankGroups
gdp.edu$rankGroups[1]
str(gdp.edu$rankGroups)
head(gdp.edu)
gps<-arrange(gdp.edu,rank)
head(gps)
gps[1:38]
gps[1:38,]
ans<-gps(Income.Group=="Lower middle income")
ans<-gps[,Income.Group=="Lower middle income"]
ans<-gps[,gps$Income.Group=="Lower middle income"]
## Question Two
# Using the jpeg package read in the following picture of your instructor into R
# https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg
# Use the parameter native=TRUE. What are the 30th and 80th quantiles of the
# resulting data?
# (some Linux systems may produce an answer 638 different for the 30th quantile)
# For documentation, see http://cran.r-project.org/web/packages/jpeg/jpeg.pdf
library(jpeg)
# read in the jpeg file
if(!file.exists("./data/jeff.jpeg")){
#- note set mode to "wb" since it is a binary file (pdf, jpeg etc)
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FPUMSDataDict06.pdf"
download.file(fileURL,destfile="./data/jeff.jpeg",mode="wb")
#include date of download
datedownloadedq1<-date()
datedownloadedq1
}
jeff<-readJPEG("./data/jeff.jpeg",native=TRUE)
quantile(jeff,probs=c(.30,.80))
jeff<-readJPEG("./data/jeff.jpeg",native=TRUE)
quantile(jeff,probs=c(.30,.80),include.lower=TRUE)
jeff<-readJPEG("./data/jeff.jpg",native=TRUE)
quantile(jeff,probs=c(.30,.80),include.lower=TRUE)
jeff<-readJPEG("./data/jeff.jpeg",native=TRUE)
quantile(jeff,probs=c(.30,.80),include.lower=TRUE)
# read in the jpeg file
if(!file.exists("./data/jeff.jpg")){
#- note set mode to "wb" since it is a binary file (pdf, jpeg etc)
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FPUMSDataDict06.pdf"
download.file(fileURL,destfile="./data/jeff.jpg",mode="wb")
#include date of download
datedownloadedq1<-date()
datedownloadedq1
}
jeff<-readJPEG("./data/jeff.jpg",native=TRUE)
quantile(jeff,probs=c(.30,.80),include.lower=TRUE)
library(jpeg)
# read in the jpeg file
if(!file.exists("./data/jeff.jpg")){
#- note set mode to "wb" since it is a binary file (pdf, jpeg etc)
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FPUMSDataDict06.pdf"
download.file(fileURL,destfile="./data/jeff.jpg",mode="wb")
#include date of download
datedownloadedq1<-date()
datedownloadedq1
}
jeff<-readJPEG("./data/jeff.jpg",native=TRUE)
quantile(jeff,probs=c(.30,.80),include.lower=TRUE)
# read in the jpeg file
if(!file.exists("./data/jeff2.jpg")){
#- note set mode to "wb" since it is a binary file (pdf, jpeg etc)
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FPUMSDataDict06.pdf"
download.file(fileURL,destfile="./data/jeff2.jpg",mode="wb")
#include date of download
datedownloadedq1<-date()
datedownloadedq1
}
jeff<-readJPEG("./data/jeff2.jpg",native=TRUE)
quantile(jeff,probs=c(.30,.80),include.lower=TRUE)
jeff2<-readJPEG("./data/jeff2.jpg",native=TRUE)
quantile(jeff2,probs=c(.30,.80),include.lower=TRUE)
if(!file.exists("./data/jeff3.jpg")){
#- note set mode to "wb" since it is a binary file (pdf, jpeg etc)
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileURL,destfile="./data/jeff2.jpg",mode="wb")
#include date of download
datedownloadedq2<-date()
datedownloadedq2
}
jeff2<-readJPEG("./data/jeff2.jpg",native=TRUE)
quantile(jeff2,probs=c(.30,.80),include.lower=TRUE)
library(jpeg)
# read in the jpeg file
if(!file.exists("./data/jeff4.jpg")){
#- note set mode to "wb" since it is a binary file (pdf, jpeg etc)
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileURL,destfile="./data/jeff2.jpg",mode="wb")
#include date of download
datedownloadedq2<-date()
datedownloadedq2
}
jeff<-readJPEG("./data/jeff.jpg",native=TRUE)
quantile(jeff,probs=c(.30,.80),include.lower=TRUE)
if(!file.exists("./data/jeff4.jpg")){
#- note set mode to "wb" since it is a binary file (pdf, jpeg etc)
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileURL,destfile="./data/jeff.jpg",mode="wb")
#include date of download
datedownloadedq2<-date()
datedownloadedq2
}
jeff<-readJPEG("./data/jeff.jpg",native=TRUE)
quantile(jeff,probs=c(.30,.80),include.lower=TRUE)
