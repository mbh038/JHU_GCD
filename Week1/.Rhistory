ls()
plot(islands)
barplot(islands)
barplot(rivers)
plot(rivers)
library("graphics", lib.loc="C:/Program Files/R/R-3.1.3/library")
detach("package:graphics", unload=TRUE)
library("graphics", lib.loc="C:/Program Files/R/R-3.1.3/library")
detach("package:graphics", unload=TRUE)
ls()
country=scan()
ls()
country=scan(what="character")
country
summary(country)
country=factor(country)
summary(country)
rm(list=ls())
ls()
x <- seq(0,2*pi,by=pi/100)
> y <- x
> xg <- (x*0+1) %*% t(y)
> yg <- (x) %*% t(y*0+1)
> f <- sin(xg+yg)
> persp(x,y,f,theta=-10,phi=40)
rm(list="ls"))
rm(list="ls()")
rm(list=ls())
x <- seq(0,2*pi,by=pi/100)
y<-x
xg <- (x*0+1) %*% t(y)
yg <- (x) %*% t(y*0+1)
f <- sin(xg+yg
persp(x,y,f,theta=-10,phi=40)
persp(x,y,f,theta=-10,phi=40)
library("graphics", lib.loc="C:/Program Files/R/R-3.1.3/library")
install.packages(c("lattice", "ggplot2"))
rm(list=ls())
install.packages("ggplot2")
str(sleep)
sleep (seq(1,20,3),)
sleep[seq(1,20,3),]
search()
library(MASS)
anorexia[seq(1,72,5),]
summary(anorexia)
str(anorexia)
ls()
name=scan(what="character")
age=scan()
weight=scan()
my.data =data.frame(name,age,weight)
my.data
year=scan(what="character")
my.data=data.frame(my.data,year)
my.data
summary(my.data)
dim(my.data)
names(my.data)
ls()
rm(name,weight,year)
ls()
mean(my.data$age)
with(my.data,cor(age,weight))
cor.test(~age+weight,data=my.data)
attach(my.data)
weight
age
age=112
age
my.data
weight=45
my.data
my.data$weight
rm(age)
age
detach(my.data)
ls()
rm(weight)
ls()
my.data
dimnames("my.data")
dimnames(my.data)
my.data$name<-NULL
my.data
rownames(my.data)<-c("Bob","Sue","Mike","Debs","Jon")
my.data
mydata("Mike","age")
my.data["Mike","age"]
my.data[order(my.data$weight),]
my.data
my.data[order(my.data$weight),]->my.data.sorted
my.data
my.data.sorted
rm(my.data.sorted)
ls()
my.data[4,2]<-58
my.data
my.data$weight=my.data$weight*2.2
my.data
my.data$weight/2.2->my.data$weight
my.data
my.data.copy=my.data
ls()
my.data$weight/2.2->my.data$weight
my.data
my.data.copy
my.data=my.data.copy
my.data
ls()
my.data$height=c(186,167,166,178,190)
my.data
example(contour)
ls()
rm(list=ls())
ls()
x
x=c(seq(1,.1,100))
x=c(seq(1,100))
x
x=c(seq(1,100,.1))
x
x=c(seq(1,2*pi(),.1))
pi
x=c(seq(0,2*pi,.1))
x
ls()
y=sin(x)
y
my.data=data.frame(x,y)
my.data
plot(my.data)
plot(my.data)
plot(my.data)
z=cos(x)
my.data$z<-z
my.data
plot(my.data)
ls()
rm(x,y,z)
ls()
ggplot(my.data)
package(ggplot2)
ls()
install.packages("ggplot2")
gplot(my.data)
ggplot(my.data)
library("ggplot2", lib.loc="~/R/win-library/3.1")
ggplot(data = my.data, aes(x = x, y = z))
a<-ggplot(data = my.data, aes(x = x, y = z))
a
a<-ggplot(data = my.data, aes(x = x, y = z))+ geom_point(size = 5)
a
a<-ggplot(data = my.data, aes(x = x, y = z))+ geom_point(size = 2)
a
a<-ggplot(data = my.data, aes(x = x, y = y))+ geom_point(size = 2)
a
ggplot(data = my.data, aes(x = x, y = y))+ geom_point(size = 2)
a<-ggplot(data = my.data, aes(x = x, y = y))+ geom_point(size = 2)
a<-ggplot(data = my.data, aes(x = x, y = y))
a
a<-a+geom_point(2)
a<-a+geom_point()
a
<- a + xlab("Time") + ylab("Amplitude") + ggtitle("Oscillator")
a<- a + xlab("Time") + ylab("Amplitude") + ggtitle("Oscillator")
a
a<-ggplot(data=my.data,aes(x=x,y=y,col=z))+geom_point()
a
a<- a + xlab("Time") + ylab("Amplitude") + ggtitle("Oscillator")
a
q()
install.packages(swirl)
install.packages("swirl")
library(swirl)
swirl()
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_NA)
sum(my_na)
my_data
0/0
inf/inf
inf-inf
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)& x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
*list item 3
install.packages("KernSmooth R")
library(KernSmooth R)
library("KernSmooth R")
library("rmarkdown", lib.loc="~/R/win-library/3.1")
library("swirl", lib.loc="~/R/win-library/3.1")
library("KernSmooth", lib.loc="C:/Program Files/R/R-3.1.3/library")
rm(list=ls())
y<-data.frame(a=1,b="a")
dput(y)
dput(y,file="y.R")
new.y<-dget("y.R")
new.y
x<-"foo"
y<-c(1,2)
dump(c("x","y"),file="xy.R")
rm(x,y)
source("xy.R")
x
y
str(dump)
str(dget)
str(file)
cube<-function(x,n){x^n}
cube(3)
cube<-function(x,n){x^3}
cube(2,5)
x<-1:10
if(x>5){
x<-0
}
y<-1:10
y<-0
y
swirl()
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2<-matrix(1:20,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames<-c("patient","age","weight","bp","rating","test")
colnames(my_data)<-cnames
my_data
TRUE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
5!==7
5!=7
!(5==7)
FALSE & FALSE
TRUE & c(TRUE,FALSE, FALSE)
TRUE && c(TRUE,FALSE, FALSE)
TRUE | c(TRUE,FALSE,FALSE)
TRUE || c(TRUE,FALSE,FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical("twins","twins")
xor(5==6,!FALSE)
ints<-sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
library(datasets)
data(mtcars)
summary(mtcars)
str(mtcars)
tapply(mtcars$mpg,mycars$cyl,mean)
tapply(mtcars$mpg,mtcars$cyl,mean)
cyl8<-subset(mtcars,mtcars$cyl==8)
str(cyl8)
mean8<-mean(cyl8$mpg)
mean8
hpt<-tapply(mtcars$hp,mtacrs$cyl,mean)
hpt<-tapply(mtcars$hp,mtcars$cyl,mean)
hpt
hpt[3]-hpt[1]
debug(ls)
ls()
exit
q
?debug
q
q
q
q
q
q
q
str(mtcars)
debug(ls)
debug(ls)
ls()
debug(ls)
ls()
set.seed(1)
rpois(5, 2)
rpois(5,2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
x
e
y
ploy(y)
plot(y)
plot(x,y)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv ")
read.csv("getdata-data-ss06hid.csv")
setwd("C:/Users/Mike/Rspace/JHU GCD/Quiz1")
read.csv("getdata-data-ss06hid.csv")
dat<-read.csv("getdata-data-ss06hid.csv")
str(dat)
?sum
summary(dat$VAL)
?count
val<-dat&VAL
val<-dat$VAL
sum(val)
sum(val,na.rm=TRUE)
val24<-subset(val==24)
?subset
val24<subset(dat,VAL==24)
val24<-subset(dat,VAL==24)
summary(val24)
nrow(val24)
?download.file()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","dat.csv")
rm(list=ls())
dat<-read.csv("dat.csv")
val24<-subset(dat,VAL==24)
nrow(val24)
getwd()
setwd("../")
getwd()
setwd("./Quiz1")
getwd()
if(!file.exists("data")){}
if(!file.exists("data")){
dir.create("data")
}
list.files()
if(!file.exists("data")){
dir.create("data")
}
fileURL<-"https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
download.file(fileURL,destfile="./data/cameras.csv",method="curl")
list.files("./data")
if(!file.exists("data")){
dir.create("data")
}
fileURL<-"https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
download.file(fileURL,destfile="./data/cameras.csv")
list.files("./data")
#create sub-directory of the working dir called "data" if one does not exist already
if(!file.exists("data")){
dir.create("data")
}
#download a data file as csv in the "data" dir
fileURL<-"https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
download.file(fileURL,destfile="./data/cameras.csv")
list.files("./data")
datedownloaded<-date()
datedownloaded
#create sub-directory of the working dir called "data" if one does not exist already
if(!file.exists("data")){
dir.create("data")
}
#download a data file as csv in the "data" dir
#on Mac, need method="curl" if url starts with https:
fileURL<-"https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
download.file(fileURL,destfile="./data/cameras.csv")
list.files("./data")
#include date of download
datedownloaded<-date()
datedownloaded
getwd()
#read in camera data
cameraData<-read.table("./data/cameras.csv")
cameraData<-read.table("./data/cameras.csv",sep=",",header=TRUE)
cameraData<-read.table("./data/cameras.csv",sep=",",header=TRUE)
head(cameraData)
rm(list=ls())
#create sub-directory of the working dir called "data" if one does not exist already
if(!file.exists("data")){
dir.create("data")
}
#download a data file as csv in the "data" dir
#on Mac, need method="curl" if url starts with https:
fileURL<-"https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
download.file(fileURL,destfile="./data/cameras.csv")
list.files("./data")
#include date of download
datedownloaded<-date()
datedownloaded
#read in camera data
cameraData<-read.table("./data/cameras.csv")
#this gives an error, becuase the data is comma separated
cameraData<-read.table("./data/cameras.csv",sep=",",header=TRUE)
head(cameraData)
#read.csv expects comma separated and header=TRUE
cameraData<-read.csv(".data/cameras.csv")
head(cameraData)
rm(list=ls())
cameraData<-read.csv("./data/cameras.csv")
head(cameraData)
if(!file.exists("data")){
dir.create("data")
}
fileURL<-"https://data.baltimorecity.gov/api/views/dz54-2aru/rows.xlsx?accessType=DOWNLOAD"
download.file(fileURL,destfile="./data/cameras.xlsx")
list.files("./data")
datedownloaded<-date()
datedownloaded
